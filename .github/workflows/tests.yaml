# This is a basic workflow to help you get started with Actions

name: Tests

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  workflow_dispatch:

jobs:
  phpstan:
    name: PHPStan
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: shivammathur/setup-php@v2
        with:
          php-version: 8.4
          coverage: none

      - run: composer install --no-progress --prefer-dist
      - run: composer phpstan -- --no-progress
        continue-on-error: true

  phpcs:
    name: PHP CS
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: shivammathur/setup-php@v2
        with:
          php-version: 8.4
          coverage: none

      - run: composer install --no-progress --prefer-dist
      - run: composer phpcs
        continue-on-error: true

  psalm:
    name: Psalm
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: shivammathur/setup-php@v2
        with:
          php-version: 8.4
          coverage: none

      - run: composer install --no-progress --prefer-dist
      - run: composer psalm -- --no-progress
        continue-on-error: true

  tests:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        php: [ '8.2', '8.3', '8.4' ]

      fail-fast: false

    name: PHP ${{ matrix.php }} tests
    steps:
      - uses: actions/checkout@v3
      - uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
          coverage: none

      - run: composer install --no-progress --prefer-dist
      - run: vendor/bin/tester tests -s -C

  code_coverage:
    name: Code Coverage
    runs-on: ubuntu-latest
    needs: [tests]
    steps:
      - uses: actions/checkout@v3
      - uses: shivammathur/setup-php@v2
        with:
          php-version: 8.4
          coverage: none

      - run: composer install --no-progress --prefer-dist
      - name: Run tests with coverage
        run: vendor/bin/tester -p phpdbg tests -s -C --coverage ./coverage.xml --coverage-src ./src

      - name: Download php-coveralls
        run: wget https://github.com/php-coveralls/php-coveralls/releases/download/v2.7.0/php-coveralls.phar

      - name: Upload coverage results to Coveralls
        env:
          COVERALLS_REPO_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: php php-coveralls.phar --verbose --config tests/.coveralls.yml
